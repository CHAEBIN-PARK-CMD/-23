 보고서: 파일 시스템 관리 복합문제 1~3 풀이 정리
✅ 복합문제 1
(1) 문제
exam.txt 파일의 첫 번째 블록이 53번 디스크 블록에 할당되어 있다.
→ 파일이 적재된 디스크 블록들을 순서대로 나열하라.

풀이
이는 연결 할당 방식에서의 블록 순서를 추적하는 문제이다.
각 블록이 다음 블록의 번호를 가리키고 있기 때문에 링크드 리스트처럼 연결되어 있다.

정답: 53 → 2 → 124 → 54 → 320

(2) 문제
블록 크기가 1KB일 때, exam.txt 파일의 크기로 가장 적절한 것은?

풀이
5개의 블록이 사용되었기 때문에 파일 크기는 5KB 이하여야 하며, 4.5KB 정도로 추정 가능함.
1KB 단위로 5블록 사용 중 마지막은 일부만 사용되었을 가능성이 큼.

정답: ③ 4.5KB

✅ 복합문제 2
(1) 문제
score.txt 파일의 첫 블록이 55번 디스크 블록에 할당되어 있다.
→ 파일이 적재된 디스크 블록들을 순서대로 나열하라.

풀이
마찬가지로 연결 할당 방식 기반. 각 블록은 다음 블록 번호를 저장.

정답: 55 → 321 → 52 → 123

(2) 문제
블록 크기가 2KB일 때, score.txt 파일의 크기로 가장 적절한 것은?

풀이
4개의 블록 × 2KB = 8KB. 하지만 마지막 블록은 일부만 사용되었을 가능성 있음.
따라서 7KB 정도가 가장 적절.

정답: ② 7KB

✅ 복합문제 3
(1) 문제
유닉스 파일 시스템에서 /usr/dev/source/app.c 파일을 읽기 위해
운영체제가 읽는 i-node의 개수와 순서는?

풀이
UNIX 파일 시스템은 각 디렉터리와 파일에 대해 고유한 i-node를 가진다.
경로를 따라가면서 디렉터리와 파일의 i-node를 차례로 참조함.

정답: 총 5개 i-node

루트 디렉터리 i-node

/usr 디렉터리 i-node

/usr/dev 디렉터리 i-node

/usr/dev/source 디렉터리 i-node

/usr/dev/source/app.c 파일의 i-node

(2) 문제
해당 파일을 읽을 때 i-node 및 디스크 블록이 읽혀지는 순서는?

풀이
디렉터리를 탐색하면서 디렉터리 i-node → 디렉터리 블록 → 다음 i-node...의 순서를 반복.
최종적으로 파일 블록까지 접근.

정답:

루트 i-node

루트 디렉터리 블록

/usr의 i-node

/usr 디렉터리 블록

/usr/dev의 i-node

/usr/dev 디렉터리 블록

/usr/dev/source의 i-node

/usr/dev/source 디렉터리 블록

app.c의 i-node

app.c의 파일 블록

(3) 문제
운영체제가 i-node 테이블을 메모리에 적재해 두는 이유는?

풀이

i-node에는 파일 크기, 블록 위치 등 파일 메타 정보가 있음

파일을 읽거나 쓸 때 해당 정보에 반복 접근함

i-node를 디스크에서 매번 읽는다면 비효율적임
→ 메모리의 i-node 테이블에 적재해두고 접근하면 효율성 향상

정답 요약:
파일의 메타 정보를 자주 액세스하기 때문에 메모리에 i-node 테이블을 유지하여 성능을 최적화함.